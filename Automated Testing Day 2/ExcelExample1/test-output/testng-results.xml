<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="187" started-at="2016-07-20T16:27:14Z" finished-at="2016-07-20T16:27:14Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="187" started-at="2016-07-20T16:27:14Z" finished-at="2016-07-20T16:27:14Z">
      <class name="utility.TestExcel1">
        <test-method status="PASS" signature="initCalc()[pri:0, instance:utility.TestExcel1@48eff760]" name="initCalc" is-config="true" duration-ms="16" started-at="2016-07-20T09:27:14Z" finished-at="2016-07-20T09:27:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initCalc -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="16" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="0" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="0" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[65]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="FAIL" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="0" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Actual is not equal to expected]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Actual is not equal to expected
	at org.testng.Assert.fail(Assert.java:94)
	at utility.TestExcel1.testAdd(TestExcel1.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="destroyCalc()[pri:0, instance:utility.TestExcel1@48eff760]" name="destroyCalc" is-config="true" duration-ms="46" started-at="2016-07-20T09:27:14Z" finished-at="2016-07-20T09:27:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroyCalc -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="0" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[80]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="FAIL" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="0" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Actual is not equal to expected]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Actual is not equal to expected
	at org.testng.Assert.fail(Assert.java:94)
	at utility.TestExcel1.testAdd(TestExcel1.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:utility.TestExcel1@48eff760]" name="testAdd" duration-ms="0" started-at="2016-07-20T09:27:14Z" data-provider="dpAddValid" finished-at="2016-07-20T09:27:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[108]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
      </class> <!-- utility.TestExcel1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
